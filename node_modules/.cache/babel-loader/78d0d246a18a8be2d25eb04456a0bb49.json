{"ast":null,"code":"var _jsxFileName = \"D:\\\\newsclone\\\\src\\\\components\\\\ShowStories.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport story from './Story';\nimport useDataFetcher from '../hooks/dataFetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowStories = props => {\n  _s();\n\n  const {\n    type\n  } = props.match.params;\n  const {\n    isLoading,\n    stories\n  } = useDataFetcher(type);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: stories.map(({\n        data: story\n      }) => /*#__PURE__*/_jsxDEV(Story, {\n        story: story\n      }, story.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this))\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(ShowStories, \"FtUFoJFxuIWL2OdouJ2BJX1OVt8=\", false, function () {\n  return [useDataFetcher];\n});\n\n_c = ShowStories;\nexport default ShowStories;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowStories\");","map":{"version":3,"sources":["D:/newsclone/src/components/ShowStories.js"],"names":["React","story","useDataFetcher","ShowStories","props","type","match","params","isLoading","stories","map","data","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAU;AAAA;;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAASD,KAAK,CAACE,KAAN,CAAYC,MAA3B;AACA,QAAM;AAACC,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAsBP,cAAc,CAACG,IAAD,CAA1C;AAEA,sBACI;AAAA,cACCG,SAAS,gBACN;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN;AAAA,gBACCC,OAAO,CAACC,GAAR,CAAY,CAAC;AAACC,QAAAA,IAAI,EAACV;AAAN,OAAD,kBACT,QAAC,KAAD;AAAsB,QAAA,KAAK,EAAIA;AAA/B,SAAYA,KAAK,CAACW,EAAlB;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAJJ,mBADJ;AAaH,CAjBD;;GAAMT,W;UAE0BD,c;;;KAF1BC,W;AAkBN,eAAgBA,WAAhB","sourcesContent":["import React from 'react';\r\nimport story from './Story';\r\nimport useDataFetcher from '../hooks/dataFetcher';\r\n\r\n\r\nconst ShowStories = (props) =>{\r\n    const {type} = props.match.params;\r\n    const {isLoading,stories} = useDataFetcher(type);\r\n\r\n    return(\r\n        <>\r\n        {isLoading ? (\r\n            <p className=\"loading\">Loading....</p>\r\n        ) : (\r\n            <>\r\n            {stories.map(({data:story})=>(\r\n                <Story key={story.id} story = {story} />\r\n            ))}\r\n            </>\r\n        )}\r\n        </>\r\n    );\r\n};\r\nexport default  ShowStories;"]},"metadata":{},"sourceType":"module"}