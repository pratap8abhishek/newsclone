{"ast":null,"code":"var _jsxFileName = \"D:\\\\newsclone\\\\src\\\\components\\\\ShowStories.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Story from './Story';\nimport useDataFetcher from '../hooks/dataFetcher';\nimport Loader from './Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowStories = props => {\n  _s();\n\n  const {\n    type\n  } = props.match.params;\n  const {\n    isLoading,\n    stories\n  } = useDataFetcher(type);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Loader, {\n      show: isLoading,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: stories.map(({\n        data: story\n      }) => /*#__PURE__*/_jsxDEV(Story, {\n        story: story\n      }, story.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowStories, \"FtUFoJFxuIWL2OdouJ2BJX1OVt8=\", false, function () {\n  return [useDataFetcher];\n});\n\n_c = ShowStories;\nexport default ShowStories;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowStories\");","map":{"version":3,"sources":["D:/newsclone/src/components/ShowStories.js"],"names":["React","Story","useDataFetcher","Loader","ShowStories","props","type","match","params","isLoading","stories","map","data","story","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAU;AAAA;;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAASD,KAAK,CAACE,KAAN,CAAYC,MAA3B;AACA,QAAM;AAACC,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAsBR,cAAc,CAACI,IAAD,CAA1C;AAEA,sBACI;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEG,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD,CAAO,QAAP;AAAA,gBACGC,OAAO,CAACC,GAAR,CAAY,CAAC;AAAEC,QAAAA,IAAI,EAAEC;AAAR,OAAD,kBACX,QAAC,KAAD;AAAsB,QAAA,KAAK,EAAEA;AAA7B,SAAYA,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADJ;AAUH,CAdD;;GAAMV,W;UAE0BF,c;;;KAF1BE,W;AAeN,eAAgBA,WAAhB","sourcesContent":["import React from 'react';\r\nimport Story from './Story';\r\nimport useDataFetcher from '../hooks/dataFetcher';\r\nimport Loader from './Loader';\r\n\r\nconst ShowStories = (props) =>{\r\n    const {type} = props.match.params;\r\n    const {isLoading,stories} = useDataFetcher(type);\r\n\r\n    return (\r\n        <>\r\n          <Loader show={isLoading}>Loading...</Loader>\r\n          <React.Fragment>\r\n            {stories.map(({ data: story }) => (\r\n              <Story key={story.id} story={story} />\r\n            ))}\r\n          </React.Fragment>\r\n        </>\r\n      );\r\n};\r\nexport default  ShowStories;"]},"metadata":{},"sourceType":"module"}