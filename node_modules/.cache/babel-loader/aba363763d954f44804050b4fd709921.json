{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { getStories } from '../utils/apis';\n\nconst useDataFetcher = type => {\n  _s();\n\n  const [stories, setStories] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    getStories(type).then(stories => {\n      setStories(stories);\n      setIsLoading(false);\n    }).catch(() => {\n      setIsLoading(false);\n    });\n  }, [type]);\n  return {\n    isLoading,\n    stories\n  };\n};\n\n_s(useDataFetcher, \"3v8bc37XXuw4Vk1VhRuDt7NMbnU=\");\n\nexport default useDataFetcher;","map":{"version":3,"sources":["D:/newsclone/src/hooks/dataFetcher.js"],"names":["useState","useEffect","getStories","useDataFetcher","type","stories","setStories","isLoading","setIsLoading","then","catch"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,UAAR,QAAyB,eAAzB;;AAEA,MAAMC,cAAc,GAAIC,IAAD,IAAS;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AAEDC,EAAAA,SAAS,CAAC,MAAK;AACXO,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAN,IAAAA,UAAU,CAACE,IAAD,CAAV,CACCK,IADD,CACOJ,OAAD,IAAY;AACdC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAJD,EAKCE,KALD,CAKO,MAAK;AACRF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAPD;AAQH,GAVQ,EAUP,CAACJ,IAAD,CAVO,CAAT;AAYF,SAAO;AAACG,IAAAA,SAAD;AAAWF,IAAAA;AAAX,GAAP;AACC,CAjBD;;GAAMF,c;;AAkBN,eAAgBA,cAAhB","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {getStories} from '../utils/apis';\r\n\r\nconst useDataFetcher = (type) =>{\r\n   const [stories, setStories] = useState([]);\r\n   const [isLoading, setIsLoading] = useState(false);   \r\n   \r\n  useEffect(() =>{\r\n      setIsLoading(true);\r\n      getStories(type)\r\n      .then((stories) =>{\r\n          setStories(stories);\r\n          setIsLoading(false);\r\n      })\r\n      .catch(() =>{\r\n          setIsLoading(false);\r\n      });\r\n  },[type]);\r\n\r\nreturn {isLoading,stories};\r\n};\r\nexport default  useDataFetcher;"]},"metadata":{},"sourceType":"module"}